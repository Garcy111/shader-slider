{"version":3,"file":"shader-slider.modern.mjs","sources":["../src/shader-slider.js"],"sourcesContent":["import * as THREE from 'three';\nimport TweenMax from 'gsap/TweenMax';\n\nexport default function (opts) {\n\n  var vertex = `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n\n  var fragment = `\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n`;\n\n  function firstDefined() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== undefined) return arguments[i];\n    }\n  }\n\n  var parent = opts.parent;\n  var dispImage = opts.displacementImage;\n  var images = opts.images;\n\n  if (!(images[0] && images[1] && dispImage)) {\n    console.warn('One or more images are missing');\n    return;\n  }\n\n  var imagesRatio = firstDefined(opts.imagesRatio, 1.0);\n  var intensity1 = firstDefined(opts.intensity1, opts.intensity, 1);\n  var intensity2 = firstDefined(opts.intensity2, opts.intensity, 0,5);\n  var commonAngle = firstDefined(opts.angle, Math.PI / 4); // 45 degrees by default, so grayscale images work correctly\n  var angle1 = firstDefined(opts.angle1, commonAngle);\n  var angle2 = firstDefined(opts.angle2, -commonAngle * 3);\n  var speed = opts.speed;\n  let autoplayInterval;\n  var autoplay = opts.autoplay ? opts.autoplay : false;\n  var autoplaySpeed = opts.autoplaySpeed ? opts.autoplaySpeed : 5000;\n  var easing = firstDefined(opts.easing, Expo.easeOut);\n\n  if (!parent) {\n    console.warn('Parent missing');\n    return;\n  }\n\n  var scene = new THREE.Scene();\n  var camera = new THREE.OrthographicCamera(\n    parent.offsetWidth / -2,\n    parent.offsetWidth / 2,\n    parent.offsetHeight / 2,\n    parent.offsetHeight / -2,\n    1,\n    1000\n  );\n\n  camera.position.z = 1;\n\n  var renderer = new THREE.WebGLRenderer({\n    antialias: false,\n    alpha: true\n  });\n\n  renderer.setPixelRatio(2.0);\n  renderer.setClearColor(0xffffff, 0.0);\n  renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n  parent.appendChild(renderer.domElement);\n\n  var render = function () {\n    // This will be called by the TextureLoader as well as TweenMax.\n    renderer.render(scene, camera);\n  };\n\n  var loader = new THREE.TextureLoader();\n  loader.crossOrigin = '';\n\n  var disp = loader.load(dispImage, render);\n  disp.magFilter = disp.minFilter = THREE.LinearFilter;\n\n  const textures = [];\n  for (let i = 0; images.length > i; i++) {\n    textures[i] = loader.load(images[i], render);\n    textures[i].magFilter = THREE.LinearFilter;\n    textures[i].minFilter = THREE.LinearFilter;\n  }\n\n  let a1, a2;\n  var imageAspect = imagesRatio;\n  if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n    a1 = 1;\n    a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n  } else {\n    a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n    a2 = 1;\n  }\n\n  var mat = new THREE.ShaderMaterial({\n    uniforms: {\n      intensity1: {\n        type: 'f',\n        value: intensity1\n      },\n      intensity2: {\n        type: 'f',\n        value: intensity2\n      },\n      dispFactor: {\n        type: 'f',\n        value: 0\n      },\n      angle1: {\n        type: 'f',\n        value: angle1\n      },\n      angle2: {\n        type: 'f',\n        value: angle2\n      },\n      texture1: {\n        type: 't',\n        value: textures[0]\n      },\n      texture2: {\n        type: 't',\n        value: textures[1]\n      },\n      disp: {\n        type: 't',\n        value: disp\n      },\n      res: {\n        type: 'vec4',\n        value: new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2)\n      },\n      dpr: {\n        type: 'f',\n        value: window.devicePixelRatio\n      }\n    },\n\n    vertexShader: vertex,\n    fragmentShader: fragment,\n    transparent: true,\n    opacity: 1.0,\n  });\n\n  var geometry = new THREE.PlaneBufferGeometry(parent.offsetWidth, parent.offsetHeight, 1);\n  var object = new THREE.Mesh(geometry, mat);\n  scene.add(object);\n\n  let index = 0;\n\n  function next() {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n    }\n    nextSlide();\n  }\n\n  function prev() {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n    }\n    prevSlide();\n  }\n\n  function autoplay() {\n    nextSlide();\n  }\n\n  function nextSlide() {\n\n    index = index + 1;\n\n    if (textures.length == index) {\n      index = 0;\n      dfValue = 0;\n    }\n      \n    let dfValue = Math.round(mat.uniforms.dispFactor.value);\n    if (dfValue == 0) {\n      dfValue = 1;\n      mat.uniforms.texture2.value = textures[index];\n    } else {\n      dfValue = 0;\n      mat.uniforms.texture1.value = textures[index];\n    }\n\n    changeSlide(dfValue);\n  }\n\n  function prevSlide() {\n\n    index = index - 1;\n\n    if (index == -1) {\n      index = textures.length - 1;\n      dfValue = 0;\n    }\n\n    let dfValue = Math.round(mat.uniforms.dispFactor.value);\n    if (dfValue == 0) {\n      dfValue = 1;\n      mat.uniforms.texture2.value = textures[index];\n    } else {\n      dfValue = 0;\n      mat.uniforms.texture1.value = textures[index];\n    }\n    \n    changeSlide(dfValue);\n  }\n\n  function changeSlide(dfValue) {\n    TweenMax.to(mat.uniforms.dispFactor, speed, {\n      value: dfValue,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render,\n    });\n  }\n\n  window.addEventListener('resize', function (e) {\n    if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n      a1 = 1;\n      a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n    } else {\n      a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n      a2 = 1;\n    }\n    object.material.uniforms.res.value = new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2);\n    renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n\n    render()\n  });\n\n  if (autoplay) {\n    autoplayInterval = setInterval(nextSlide, autoplaySpeed);\n  }\n\n  this.next = next;\n  this.prev = prev;\n};\n"],"names":["opts","firstDefined","i","arguments","length","undefined","parent","dispImage","displacementImage","images","console","warn","imagesRatio","intensity1","intensity","intensity2","commonAngle","angle","Math","PI","angle1","angle2","speed","autoplayInterval","autoplay","autoplaySpeed","easing","Expo","easeOut","scene","THREE","Scene","camera","OrthographicCamera","offsetWidth","offsetHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","setClearColor","setSize","appendChild","domElement","render","loader","TextureLoader","crossOrigin","disp","load","magFilter","minFilter","LinearFilter","textures","a1","a2","imageAspect","mat","ShaderMaterial","uniforms","type","value","dispFactor","texture1","texture2","res","Vector4","dpr","window","devicePixelRatio","vertexShader","fragmentShader","transparent","opacity","geometry","PlaneBufferGeometry","object","Mesh","add","index","nextSlide","dfValue","round","changeSlide","TweenMax","to","ease","onUpdate","onComplete","addEventListener","e","material","setInterval","this","next","clearInterval","prev","prevSlide"],"mappings":"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"}