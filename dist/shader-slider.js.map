{"version":3,"file":"shader-slider.js","sources":["../src/shader-slider.js"],"sourcesContent":["import * as THREE from 'three';\nimport TweenMax from 'gsap/TweenMax';\n\nexport default function (opts) {\n\n  var vertex = `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n\n  var fragment = `\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n`;\n\n  function firstDefined() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== undefined) return arguments[i];\n    }\n  }\n\n  var parent = opts.parent;\n  var dispImage = opts.displacementImage;\n  var images = opts.images;\n\n  if (!(images[0] && images[1] && dispImage)) {\n    console.warn('One or more images are missing');\n    return;\n  }\n\n  var imagesRatio = firstDefined(opts.imagesRatio, 1.0);\n  var intensity1 = firstDefined(opts.intensity1, opts.intensity, 1);\n  var intensity2 = firstDefined(opts.intensity2, opts.intensity, 0,5);\n  var commonAngle = firstDefined(opts.angle, Math.PI / 4); // 45 degrees by default, so grayscale images work correctly\n  var angle1 = firstDefined(opts.angle1, commonAngle);\n  var angle2 = firstDefined(opts.angle2, -commonAngle * 3);\n  var speed = opts.speed;\n  var autoplay = opts.autoplay ? opts.autoplay : false;\n  var easing = firstDefined(opts.easing, Expo.easeOut);\n\n  if (!parent) {\n    console.warn('Parent missing');\n    return;\n  }\n\n  var scene = new THREE.Scene();\n  var camera = new THREE.OrthographicCamera(\n    parent.offsetWidth / -2,\n    parent.offsetWidth / 2,\n    parent.offsetHeight / 2,\n    parent.offsetHeight / -2,\n    1,\n    1000\n  );\n\n  camera.position.z = 1;\n\n  var renderer = new THREE.WebGLRenderer({\n    antialias: false,\n    alpha: true\n  });\n\n  renderer.setPixelRatio(2.0);\n  renderer.setClearColor(0xffffff, 0.0);\n  renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n  parent.appendChild(renderer.domElement);\n\n  var render = function () {\n    // This will be called by the TextureLoader as well as TweenMax.\n    renderer.render(scene, camera);\n  };\n\n  var loader = new THREE.TextureLoader();\n  loader.crossOrigin = '';\n\n  var disp = loader.load(dispImage, render);\n  disp.magFilter = disp.minFilter = THREE.LinearFilter;\n\n  const textures = [];\n  for (let i = 0; images.length > i; i++) {\n    textures[i] = loader.load(images[i], render);\n    textures[i].magFilter = THREE.LinearFilter;\n    textures[i].minFilter = THREE.LinearFilter;\n  }\n\n  let a1, a2;\n  var imageAspect = imagesRatio;\n  if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n    a1 = 1;\n    a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n  } else {\n    a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n    a2 = 1;\n  }\n\n  var mat = new THREE.ShaderMaterial({\n    uniforms: {\n      intensity1: {\n        type: 'f',\n        value: intensity1\n      },\n      intensity2: {\n        type: 'f',\n        value: intensity2\n      },\n      dispFactor: {\n        type: 'f',\n        value: 0\n      },\n      angle1: {\n        type: 'f',\n        value: angle1\n      },\n      angle2: {\n        type: 'f',\n        value: angle2\n      },\n      texture1: {\n        type: 't',\n        value: textures[0]\n      },\n      texture2: {\n        type: 't',\n        value: textures[1]\n      },\n      disp: {\n        type: 't',\n        value: disp\n      },\n      res: {\n        type: 'vec4',\n        value: new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2)\n      },\n      dpr: {\n        type: 'f',\n        value: window.devicePixelRatio\n      }\n    },\n\n    vertexShader: vertex,\n    fragmentShader: fragment,\n    transparent: true,\n    opacity: 1.0,\n  });\n\n  var geometry = new THREE.PlaneBufferGeometry(parent.offsetWidth, parent.offsetHeight, 1);\n  var object = new THREE.Mesh(geometry, mat);\n  scene.add(object);\n\n  let index = 0;\n\n  function next() {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n    }\n    nextSlide();\n  }\n\n  function prev() {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n    }\n    prevSlide();\n  }\n\n  function autoplay() {\n    nextSlide();\n  }\n\n  function nextSlide() {\n\n    index = index + 1;\n\n    if (textures.length == index) {\n      index = 0;\n      dfValue = 0;\n    }\n      \n    let dfValue = Math.round(mat.uniforms.dispFactor.value);\n    if (dfValue == 0) {\n      dfValue = 1;\n      mat.uniforms.texture2.value = textures[index];\n    } else {\n      dfValue = 0;\n      mat.uniforms.texture1.value = textures[index];\n    }\n\n    changeSlide(dfValue);\n  }\n\n  function prevSlide() {\n\n    index = index - 1;\n\n    if (index == -1) {\n      index = textures.length - 1;\n      dfValue = 0;\n    }\n\n    let dfValue = Math.round(mat.uniforms.dispFactor.value);\n    if (dfValue == 0) {\n      dfValue = 1;\n      mat.uniforms.texture2.value = textures[index];\n    } else {\n      dfValue = 0;\n      mat.uniforms.texture1.value = textures[index];\n    }\n    \n    changeSlide(dfValue);\n  }\n\n  function changeSlide(dfValue) {\n    TweenMax.to(mat.uniforms.dispFactor, speed, {\n      value: dfValue,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render,\n    });\n  }\n\n  window.addEventListener('resize', function (e) {\n    if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n      a1 = 1;\n      a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n    } else {\n      a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n      a2 = 1;\n    }\n    object.material.uniforms.res.value = new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2);\n    renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n\n    render()\n  });\n\n  if (autoplay) {\n    autoplayInterval = setInterval(nextSlide, 5000);\n  }\n\n  this.next = next;\n  this.prev = prev;\n};\n"],"names":["opts","firstDefined","i","arguments","length","undefined","parent","dispImage","displacementImage","images","imagesRatio","intensity1","intensity","intensity2","commonAngle","angle","Math","PI","angle1","angle2","speed","autoplay","easing","Expo","easeOut","scene","THREE","Scene","camera","OrthographicCamera","offsetWidth","offsetHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","setClearColor","setSize","appendChild","domElement","render","loader","TextureLoader","crossOrigin","disp","load","magFilter","minFilter","LinearFilter","a1","a2","textures","imageAspect","mat","ShaderMaterial","uniforms","type","value","dispFactor","texture1","texture2","res","Vector4","dpr","window","devicePixelRatio","vertexShader","fragmentShader","transparent","opacity","geometry","PlaneBufferGeometry","object","Mesh","add","index","addEventListener","e","material","autoplayInterval","setInterval","nextSlide","this","next","clearInterval","prev","dfValue","round","changeSlide","prevSlide","console","warn","TweenMax","to","ease","onUpdate","onComplete"],"mappings":"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"}