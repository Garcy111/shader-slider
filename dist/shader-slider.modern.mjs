import*as e from"three";import t from"gsap/TweenMax";function n(n){function i(){for(var e=0;e<arguments.length;e++)if(void 0!==arguments[e])return arguments[e]}var r=n.parent,o=n.displacementImage,a=n.images;if(!(a[0]&&a[1]&&o))return void console.warn("One or more images are missing");var s=i(n.imagesRatio,1),f=i(n.intensity1,n.intensity,1),l=i(n.intensity2,n.intensity,0,5),u=i(n.angle,Math.PI/4),v=i(n.angle1,u),d=i(n.angle2,3*-u),p=n.speed,c=!!n.autoplay&&n.autoplay,m=i(n.easing,Expo.easeOut);if(!r)return void console.warn("Parent missing");var g=new e.Scene,h=new e.OrthographicCamera(r.offsetWidth/-2,r.offsetWidth/2,r.offsetHeight/2,r.offsetHeight/-2,1,1e3);h.position.z=1;var y=new e.WebGLRenderer({antialias:!1,alpha:!0});y.setPixelRatio(2),y.setClearColor(16777215,0),y.setSize(r.offsetWidth,r.offsetHeight),r.appendChild(y.domElement);var x=function(){y.render(g,h)},w=new e.TextureLoader;w.crossOrigin="";var F=w.load(o,x);F.magFilter=F.minFilter=e.LinearFilter;const W=[];for(let t=0;a.length>t;t++)W[t]=w.load(a[t],x),W[t].magFilter=e.LinearFilter,W[t].minFilter=e.LinearFilter;let H,M;var I=s;r.offsetHeight/r.offsetWidth<I?(H=1,M=r.offsetHeight/r.offsetWidth/I):(H=r.offsetWidth/r.offsetHeight*I,M=1);var P=new e.ShaderMaterial({uniforms:{intensity1:{type:"f",value:f},intensity2:{type:"f",value:l},dispFactor:{type:"f",value:0},angle1:{type:"f",value:v},angle2:{type:"f",value:d},texture1:{type:"t",value:W[0]},texture2:{type:"t",value:W[1]},disp:{type:"t",value:F},res:{type:"vec4",value:new e.Vector4(r.offsetWidth,r.offsetHeight,H,M)},dpr:{type:"f",value:window.devicePixelRatio}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),V=new e.PlaneBufferGeometry(r.offsetWidth,r.offsetHeight,1),U=new e.Mesh(V,P);g.add(U);let C=0;function c(){R()}function R(){C+=1,W.length==C&&(C=0,e=0);let e=Math.round(P.uniforms.dispFactor.value);0==e?(e=1,P.uniforms.texture2.value=W[C]):(e=0,P.uniforms.texture1.value=W[C]),_(e)}function _(e){t.to(P.uniforms.dispFactor,p,{value:e,ease:m,onUpdate:x,onComplete:x})}window.addEventListener("resize",function(t){r.offsetHeight/r.offsetWidth<I?(H=1,M=r.offsetHeight/r.offsetWidth/I):(H=r.offsetWidth/r.offsetHeight*I,M=1),U.material.uniforms.res.value=new e.Vector4(r.offsetWidth,r.offsetHeight,H,M),y.setSize(r.offsetWidth,r.offsetHeight),x()}),c&&(autoplayInterval=setInterval(R,5e3)),this.next=function(){autoplayInterval&&clearInterval(autoplayInterval),R()},this.prev=function(){autoplayInterval&&clearInterval(autoplayInterval),function(){C-=1,-1==C&&(C=W.length-1,e=0);let e=Math.round(P.uniforms.dispFactor.value);0==e?(e=1,P.uniforms.texture2.value=W[C]):(e=0,P.uniforms.texture1.value=W[C]),_(e)}()}}export{n as default};
//# sourceMappingURL=shader-slider.modern.mjs.map
