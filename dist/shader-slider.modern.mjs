import*as e from"three";import t from"gsap/TweenMax";function n(n){function i(){for(var e=0;e<arguments.length;e++)if(void 0!==arguments[e])return arguments[e]}var o=n.parent,r=n.displacementImage,a=n.images;if(!(a[0]&&a[1]&&r))return void console.warn("One or more images are missing");var s=i(n.imagesRatio,1),f=i(n.intensity1,n.intensity,1),l=i(n.intensity2,n.intensity,0,5),u=i(n.angle,Math.PI/4),d=i(n.angle1,u),v=i(n.angle2,3*-u),p=n.speed;let c;var m=!!n.autoplay&&n.autoplay,g=n.autoplaySpeed?n.autoplaySpeed:5e3,h=i(n.easing,Expo.easeOut);if(!o)return void console.warn("Parent missing");var y=new e.Scene,x=new e.OrthographicCamera(o.offsetWidth/-2,o.offsetWidth/2,o.offsetHeight/2,o.offsetHeight/-2,1,1e3);x.position.z=1;var w=new e.WebGLRenderer({antialias:!1,alpha:!0});w.setPixelRatio(2),w.setClearColor(16777215,0),w.setSize(o.offsetWidth,o.offsetHeight),o.appendChild(w.domElement);var F=function(){w.render(y,x)},W=new e.TextureLoader;W.crossOrigin="";var H=W.load(r,F);H.magFilter=H.minFilter=e.LinearFilter;const M=[];for(let t=0;a.length>t;t++)M[t]=W.load(a[t],F),M[t].magFilter=e.LinearFilter,M[t].minFilter=e.LinearFilter;let P,V;var S=s;o.offsetHeight/o.offsetWidth<S?(P=1,V=o.offsetHeight/o.offsetWidth/S):(P=o.offsetWidth/o.offsetHeight*S,V=1);var U=new e.ShaderMaterial({uniforms:{intensity1:{type:"f",value:f},intensity2:{type:"f",value:l},dispFactor:{type:"f",value:0},angle1:{type:"f",value:d},angle2:{type:"f",value:v},texture1:{type:"t",value:M[0]},texture2:{type:"t",value:M[1]},disp:{type:"t",value:H},res:{type:"vec4",value:new e.Vector4(o.offsetWidth,o.offsetHeight,P,V)},dpr:{type:"f",value:window.devicePixelRatio}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),C=new e.PlaneBufferGeometry(o.offsetWidth,o.offsetHeight,1),R=new e.Mesh(C,U);y.add(R);let _=0;function m(){D()}function D(){_+=1,M.length==_&&(_=0,e=0);let e=Math.round(U.uniforms.dispFactor.value);0==e?(e=1,U.uniforms.texture2.value=M[_]):(e=0,U.uniforms.texture1.value=M[_]),L(e)}function L(e){t.to(U.uniforms.dispFactor,p,{value:e,ease:h,onUpdate:F,onComplete:F})}window.addEventListener("resize",function(t){o.offsetHeight/o.offsetWidth<S?(P=1,V=o.offsetHeight/o.offsetWidth/S):(P=o.offsetWidth/o.offsetHeight*S,V=1),R.material.uniforms.res.value=new e.Vector4(o.offsetWidth,o.offsetHeight,P,V),w.setSize(o.offsetWidth,o.offsetHeight),F()}),m&&(c=setInterval(D,g)),this.next=function(){c&&clearInterval(c),D()},this.prev=function(){c&&clearInterval(c),function(){_-=1,-1==_&&(_=M.length-1,e=0);let e=Math.round(U.uniforms.dispFactor.value);0==e?(e=1,U.uniforms.texture2.value=M[_]):(e=0,U.uniforms.texture1.value=M[_]),L(e)}()}}export{n as default};
//# sourceMappingURL=shader-slider.modern.mjs.map
