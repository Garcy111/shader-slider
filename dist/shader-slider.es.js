import*as e from"three";import t from"gsap/TweenMax";function n(n){function i(){for(var e=0;e<arguments.length;e++)if(void 0!==arguments[e])return arguments[e]}var r=n.parent,o=n.displacementImage,a=n.images;if(a[0]&&a[1]&&o){var s,f=i(n.imagesRatio,1),l=i(n.intensity1,n.intensity,1),u=i(n.intensity2,n.intensity,0,5),d=i(n.angle,Math.PI/4),v=i(n.angle1,d),p=i(n.angle2,3*-d),c=n.speed,m=!!n.autoplay&&n.autoplay,g=n.autoplaySpeed?n.autoplaySpeed:5e3,h=i(n.easing,Expo.easeOut);if(r){var y=new e.Scene,x=new e.OrthographicCamera(r.offsetWidth/-2,r.offsetWidth/2,r.offsetHeight/2,r.offsetHeight/-2,1,1e3);x.position.z=1;var w=new e.WebGLRenderer({antialias:!1,alpha:!0});w.setPixelRatio(2),w.setClearColor(16777215,0),w.setSize(r.offsetWidth,r.offsetHeight),r.appendChild(w.domElement);var F=function(){w.render(y,x)},W=new e.TextureLoader;W.crossOrigin="";var H=W.load(o,F);H.magFilter=H.minFilter=e.LinearFilter;for(var M,P,V=[],S=0;a.length>S;S++)V[S]=W.load(a[S],F),V[S].magFilter=e.LinearFilter,V[S].minFilter=e.LinearFilter;var U=f;r.offsetHeight/r.offsetWidth<U?(M=1,P=r.offsetHeight/r.offsetWidth/U):(M=r.offsetWidth/r.offsetHeight*U,P=1);var C=new e.ShaderMaterial({uniforms:{intensity1:{type:"f",value:l},intensity2:{type:"f",value:u},dispFactor:{type:"f",value:0},angle1:{type:"f",value:v},angle2:{type:"f",value:p},texture1:{type:"t",value:V[0]},texture2:{type:"t",value:V[1]},disp:{type:"t",value:H},res:{type:"vec4",value:new e.Vector4(r.offsetWidth,r.offsetHeight,M,P)},dpr:{type:"f",value:window.devicePixelRatio}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),R=new e.PlaneBufferGeometry(r.offsetWidth,r.offsetHeight,1),_=new e.Mesh(R,C);y.add(_);var D=0;window.addEventListener("resize",function(t){r.offsetHeight/r.offsetWidth<U?(M=1,P=r.offsetHeight/r.offsetWidth/U):(M=r.offsetWidth/r.offsetHeight*U,P=1),_.material.uniforms.res.value=new e.Vector4(r.offsetWidth,r.offsetHeight,M,P),w.setSize(r.offsetWidth,r.offsetHeight),F()}),m&&(s=setInterval(L,g)),this.next=function(){s&&clearInterval(s),L()},this.prev=function(){s&&clearInterval(s),function(){-1==(D-=1)&&(D=V.length-1,e=0);var e=Math.round(C.uniforms.dispFactor.value);0==e?(e=1,C.uniforms.texture2.value=V[D]):(e=0,C.uniforms.texture1.value=V[D]),z(e)}()}}else console.warn("Parent missing")}else console.warn("One or more images are missing");function m(){L()}function L(){V.length==(D+=1)&&(D=0,e=0);var e=Math.round(C.uniforms.dispFactor.value);0==e?(e=1,C.uniforms.texture2.value=V[D]):(e=0,C.uniforms.texture1.value=V[D]),z(e)}function z(e){t.to(C.uniforms.dispFactor,c,{value:e,ease:h,onUpdate:F,onComplete:F})}}export{n as default};
//# sourceMappingURL=shader-slider.es.js.map
